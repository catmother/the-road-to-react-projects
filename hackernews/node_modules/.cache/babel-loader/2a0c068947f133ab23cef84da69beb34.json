{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\UX410U\\\\the-road-to-react\\\\hackernews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\UX410U\\\\the-road-to-react\\\\hackernews\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nconst DEFAULT_QUERY = 'redux';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY\n    };\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.onSearchChange.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    this.setState({\n      result\n    });\n  }\n\n  fetchSearchTopStories() {\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}`).then(response => response.json()).then(result => this.setSearchTopStories(result)).catch(error => error);\n  }\n\n  componentDidMount() {\n    const searchTerm = this.state.searchTerm;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onSearchSubmit() {\n    const searchTerm = this.state.searchTerm;\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const isNotId = item => item.objectID !== id;\n\n    const updatedHits = this.state.result.hits.filter(isNotId);\n    this.setState({\n      result: _objectSpread({}, this.state.result, {\n        hits: updatedHits\n      })\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          searchTerm = _this$state.searchTerm,\n          result = _this$state.result;\n\n    if (!result) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Search, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      onSubmit: this.onSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Search\")), result && React.createElement(Table, {\n      list: result.hits,\n      onDismiss: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Search = ({\n  value,\n  onChange,\n  onSubmit,\n  children\n}) => React.createElement(\"form\", {\n  onSubmit: onSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  onChange: onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, children));\n\nconst Table = ({\n  list,\n  onDismiss\n}) => React.createElement(\"div\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, list.map(item => React.createElement(\"div\", {\n  key: item.objectID,\n  className: \"table-row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  style: largeColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: item.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, item.title)), React.createElement(\"span\", {\n  style: midColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}, item.author), React.createElement(\"span\", {\n  style: smallColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, item.num_comments), React.createElement(\"span\", {\n  style: smallColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, item.points), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => onDismiss(item.objectID),\n  className: \"button-inline\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, \"Dismiss\")))));\n\nconst Button = ({\n  onClick,\n  className = \"\",\n  children\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  className: className,\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}, children);\n\nconst largeColumn = {\n  width: \"40%\"\n};\nconst midColumn = {\n  width: \"30%\"\n};\nconst smallColumn = {\n  width: \"10%\"\n};\nexport default App;","map":{"version":3,"sources":["C:/Users/UX410U/the-road-to-react/hackernews/src/App.js"],"names":["React","Component","DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","App","constructor","props","state","result","searchTerm","setSearchTopStories","bind","fetchSearchTopStories","onSearchChange","onSearchSubmit","onDismiss","setState","fetch","then","response","json","catch","error","componentDidMount","event","target","value","preventDefault","id","isNotId","item","objectID","updatedHits","hits","filter","render","Search","onChange","onSubmit","children","Table","list","map","largeColumn","url","title","midColumn","author","smallColumn","num_comments","points","Button","onClick","className","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nconst DEFAULT_QUERY = 'redux';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY\n    };\n\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.onSearchChange.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    this.setState({ result });\n  }\n\n  fetchSearchTopStories() {\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}`)\n      .then(response => response.json())\n      .then(result => this.setSearchTopStories(result))\n      .catch(error => error);\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onSearchSubmit() {\n    const { searchTerm } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = this.state.result.hits.filter(isNotId);\n    this.setState({ \n      result: { ...this.state.result, hits: updatedHits }\n     });\n  }\n\n  render() {\n    const { searchTerm, result } = this.state;\n\n    if (!result) { return null; }\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        { result &&\n          <Table\n            list={result.hits}\n            onDismiss={this.onDismiss}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nconst Search = ({\n  value, \n  onChange,\n  onSubmit, \n  children \n}) =>\n  <form onSubmit={onSubmit}>\n    <input\n      type=\"text\" \n      value={value} \n      onChange={onChange} \n    />\n    <button type=\"submit\">\n      {children}\n    </button>\n  </form>\n\n\nconst Table = ({ list, onDismiss }) => (\n  <div className=\"table\">\n    {list.map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={largeColumn}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={midColumn}>{item.author}</span>\n        <span style={smallColumn}>{item.num_comments}</span>\n        <span style={smallColumn}>{item.points}</span>\n        <span>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Button = ({ onClick, className = \"\", children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nconst largeColumn = {\n  width: \"40%\"\n};\nconst midColumn = {\n  width: \"30%\"\n};\nconst smallColumn = {\n  width: \"10%\"\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}